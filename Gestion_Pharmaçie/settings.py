"""
Django settings for Gestion_Pharmaçie project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+)mskchz@j_lfloua!3)+g&6*k417bhi%3#s%3yfsfmo&2($e$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'paypal.standard.ipn',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Produits',
    'utilisateurs',
    'utils',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'utils.middleware.GlobalCompteFilterMiddleware',
    'utils.middleware.AutoLogoutMiddleware',
   
]

ROOT_URLCONF = 'Gestion_Pharmaçie.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'utilisateurs.context_processors.is_compte_admin',
            ],
        },
    },
]

WSGI_APPLICATION = 'Gestion_Pharmaçie.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# DATABASES = {
#     'default': dj_database_url.config()
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




#CE QUE J'AI AJOUTER
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Serveur SMTP de Gmail
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'fantchewoukomiahoeke@gmail.com'  # Ton adresse email Gmail
EMAIL_HOST_PASSWORD = 'czkd foom ssay gdnl'  # Mot de passe ou App Password de Gmail
DEFAULT_FROM_EMAIL ='PharmaManager <fantchewoukomiahoeke@gmail.com>'

import os
from dotenv import load_dotenv

load_dotenv()  # Charge les variables d'environnement du fichier .env

EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')



# La session expire après 8 heures (28800 secondes)
SESSION_COOKIE_AGE = 28800  # 8 heures

# La session expire lorsque l'utilisateur ferme son navigateur
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  

# Active la protection contre le vol de session via les cookies sécurisés
SESSION_COOKIE_SECURE = True  # ⚠️ À activer si HTTPS est utilisé

# Empêche JavaScript d’accéder aux cookies de session (protection XSS)
SESSION_COOKIE_HTTPONLY = True  

# Active la protection contre la fixation de session
SESSION_COOKIE_SAMESITE = 'Lax'  

# Utilisation du moteur de session basé sur la base de données
SESSION_ENGINE = "django.contrib.sessions.backends.db"

# Déconnexion automatique après 8 heures même si l'utilisateur est inactif
SESSION_SAVE_EVERY_REQUEST = True


################# paypal

import paypalrestsdk
PAYPAL_MODE = "live"  # Passer en mode production
PAYPAL_CLIENT_ID = "AVuu1mWr_JU8-Oq0uSBabS4eRo-rQdPxter4spllSG-ZEfHlyy9jlcI_wSOK8oBZeXdIjCc_vqjhRz2s"
PAYPAL_CLIENT_SECRET = "EJFpfE58Siw9RzcDyrZ5hhf2CaDits7YQg2X1dnZsuqGcE-KHy4Y92BuMAjjW_feFjRNe4vv4veG-llJ"
PAYPAL_PLAN_ID = "P-32D70302E3738184FM6QS6LI"
PAYPAL_WEBHOOK_ID = "04P34392H6888243H"

# Configuration du broker (Redis recommandé)
CELERY_BROKER_URL = "redis://localhost:6379/0"

# Activer les tâches asynchrones
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
